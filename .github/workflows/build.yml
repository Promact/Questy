name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Set Default JDK 11
        shell: powershell
        run: |
          $jdkPath = $env:JAVA_HOME_11_X64
          Write-Host "##vso[task.setvariable variable=JAVA_HOME]$jdkPath"
      - name: Install Minicover
        shell: powershell
        run: dotnet tool install minicover          
      - name: NPM restore
        shell: powershell
        run: |
          cd .\Trappist\src\Promact.Trappist.Web
          npm install
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          cd .\Trappist
          ..\.sonar\scanner\dotnet-sonarscanner begin /k:"Promact_Questy" `
          /o:"promact-infotech" `
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /v:${{ github.run_number }} `
          /d:sonar.cs.opencover.reportsPaths=**/opencovercoverage.xml
          /d:sonar.sources="./src/"          
          dotnet build
          dotnet minicover instrument --sources "./src/**/*.cs" `                    
          --tests "./src/Promact.Trappist.Test/**/*.cs"
          dotnet test --no-build
          dotnet minicover uninstrument
          dotnet minicover report --threshold 5
          dotnet minicover opencoverreport
          ..\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"